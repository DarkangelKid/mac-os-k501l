{
	Classes = {
		PBXBookmark = {
			Attributes = {
				fileReference = {
					Description = "A file reference to the file pointed to by this bookmark.";
					Name = "file reference";
				};
				name = {
					Description = "The name of this bookmark.";
					Name = name;
				};
			};
			Description = " A bookmark is a persistent reference to a file.";
			Name = bookmark;
			PluralName = bookmarks;
		};
		PBXBreakpoint = {
			Attributes = {
				appleScriptCondition = {
					Description = "Condition in which breakpoint should stop.";
					Name = condition;
				};
				"automaticallyContinue" = {
					Description = "Should the debugger automatically continue when it hits this breakpoint after performing any associated breakpoint actions?";
					Name = "automatically continue";
				};
				isEnabled = {
					Description = "Is the breakpoint enabled?";
					Name = enabled;
				};
				name = {
					Description = "The name of this breakpoint.";
					Name = name;
				};
			};
			Description = "An abstract class that represents a generic breakpoint that is used by the debugger to stop execution in a program. If you want to create breakpoints, use file breakpoints or symbolic breakpoints.";
			Name = breakpoint;
			PluralName = breakpoints;
		};
		PBXBuildFile = {
			Attributes = {
				buildPhase = {
					Description = "The build phase that this build file is contained by.";
					Name = "build phase";
				};
				compiledCodeFileSize = {
					Description = "The size of the object file generated when compiling the associated file.";
					Name = "compiled code size";
				};
				fileReference = {
					Description = "A file reference to the file on disk that this build file represents.";
					Name = "file reference";
				};
				name = {
					Description = "The name of this build file.";
					Name = name;
				};
				target = {
					Description = "The target that contains this build file.";
					Name = target;
				};
			};
			Description = "A \"build file\" represents an association between a target and a file reference and tracks any target-specific settings for that file reference.";
			Name = "build file";
			PluralName = "build files";
		};
		PBXContainerItem = {
			Attributes = {
				appleScriptID = {
					Description = "The unique identifier for the project item.";
					Name = id;
				};
				comments = {
					Description = "Comments about this project item.";
					Name = comments;
				};
				project = {
					Description = "The project that contains this item.";
					Name = project;
				};
			};
			Description = "The abstract class for any item in a container, one of which is a project.";
			Name = "container item";
			PluralName = "container items";
		};
		PBXExecutable = {
			Attributes = {
				activeArgumentString = {
					Description = "The arguments passed into the executable when it is launched.";
					Name = "active arguments";
				};
				isLaunchable = {
					Description = "Can this executable be launched?";
					Name = launchable;
				};
				"launchableReferencePath" = {
					Description = "The path of the executable referenced.";
					Name = path;
				};
				name = {
					Description = "The name of this executable.";
					Name = name;
				};
				startupDirectoryPath = {
					Description = "The full path to the directory that the executable is launched in.";
					Name = "startup directory";
				};
				target = {
					Description = "The target that creates the product this executable points to.";
					Name = target;
				};
			};
			Description = "The context for running or debugging a launchable executable.";
			Name = executable;
			PluralName = executables;
		};
		PBXFileBreakpoint = {
			Attributes = {
				fileReference = {
					Description = "A reference to the file that contains the breakpoint.";
					Name = "file reference";
				};
				lineNumber = {
					Description = "The line number the breakpoint is set on.";
					Name = "line number";
				};
			};
			Description = "A breakpoint that is defined by a file name:line location.";
			Name = "file breakpoint";
			PluralName = "file breakpoints";
		};
		PBXProject = {
			Attributes = {
				absolutePath = {
					Description = "The full path to the project file on disk.";
					Name = "full path";
				};
				activeArchitecture = {
					Description = "The active architecture. This is used when telling the project to compile, show assembly code, or preprocess.";
					Name = "active architecture";
				};
				"activeBuildConfigurationType" = {
					Description = "The active build configuration type used for actions that do not explicity specify a configuration.";
					Name = "active build configuration type";
				};
				activeBuildStyle = {
					Description = "(Obsolete) The active build style. Unless explicitly indicated in a build or clean command, this build style is used.";
					Name = "active build style";
				};
				activeExecutable = {
					Description = "The active executable. This is used when telling the project to run or debug.";
					Name = "active executable";
				};
				"activeSDKCanonicalName" = {
					Description = "The active SDK for the project.  This overrides any Base SDK set in the active target or project.";
					Name = "active SDK";
				};
				activeTarget = {
					Description = "The active target. This is used when telling the project to be built or cleaned.";
					Name = "active target";
				};
				appleScriptID = {
					Description = "The unique identifier for the project.";
					Name = id;
				};
				"builtProductsLocation" = {
					Description = "The full path to the folder that contains any built products.  This is dependent on the active build style.";
					Name = "product directory";
				};
				currentlyBuilding = {
					Description = "Is the project currently building or cleaning a target?";
					Name = "currently building";
				};
				"defaultBuildConfigurationType" = {
					Description = "The default build configuration type used when building with xcodebuild if no -configuration option is supplied.";
					Name = "default build configuration type";
				};
				"intermediatesLocation" = {
					Description = "The full path to the folder that contains all intermediate files for the project. This is dependent on the active build style.";
					Name = "intermediates directory";
				};
				isReadOnly = {
					Description = "Is the project only open for reading?";
					Name = "read only";
				};
				name = {
					Description = "The name of this project.";
					Name = name;
				};
				organizationName = {
					Description = "The name to use in the header file of new files created with project templates.  Defaults to Apple Inc.";
					Name = "organization name";
				};
				path = {
					Description = "The path to the project file on disk.";
					Name = path;
				};
				projectDirectory = {
					Description = "The full path to the folder that contains the project file.";
					Name = "project directory";
				};
				projectFileRef = {
					Description = "A file reference to the core project.pbxproj file itself.";
					Name = "project file reference";
				};
				projectRoots = {
					Description = "A list of paths to all directories that contain files referenced in this project.";
					Name = "project roots";
					Sex = none;
				};
				resolvedAbsolutePath = {
					Description = "The fully resolved path to the project file on disk. Specifically, all symlinks in the path have been resolved.";
					Name = "real path";
				};
				rootGroup = {
					Description = "The root of the files & groups hierarchy in the project.";
					Name = "root group";
				};
				userSettingsFileRef = {
					Description = "A file reference to the current user's pbxuser file.";
					Name = "user file reference";
				};
			};
			Description = "The model for an Xcode project file. Note that the item references, file references, and groups elements are read-only. Changing the contents of these element relationships is unsupported.";
			Name = project;
			PluralName = projects;
		};
		PBXProjectItem = {
			Description = "The abstract class for any item in a project.";
			Name = "project item";
			PluralName = "project items";
		};
		"PBXSymbolicBreakpoint" = {
			Attributes = {
				symbolName = {
					Description = "The name of the symbol that the breakpoint stops at.";
					Name = "symbol name";
				};
			};
			Description = "A breakpoint that is defined using a symbol name.";
			Name = "symbolic breakpoint";
			PluralName = "symbolic breakpoints";
		};
		PBXTextBookmark = {
			Attributes = {
				"appleScriptCharacterRange" = {
					Description = "The character range for this bookmark, which is of the form {x ,y} where x is the position of the first selected character and y is the position of the last selected character.";
					Name = "character range";
				};
			};
			Description = "A text bookmark represents a selection in a file reference.";
			Name = "text bookmark";
			PluralName = "text bookmarks";
		};
		"XCAppleScriptBuildMessage" = {
			Attributes = {
				buildFile = {
					Description = "The build file that contains this build message";
					Name = "build file";
				};
				filePath = {
					Description = "The absolute path to the file that the build message is referencing.";
					Name = path;
				};
				lineNumber = {
					Description = "The line number in the file that the build message corresponds to.";
					Name = location;
				};
				messageString = {
					Description = "The text of the build message.";
					Name = message;
				};
				type = {
					Description = "Indicates the kind of build message.";
					Name = kind;
				};
			};
			Description = "A message generated during a build that usually points to a warning or error in the associated build file.";
			Name = "build message";
			PluralName = "build messages";
		};
		"XCAppleScriptEnvironmentVariable" = {
			Attributes = {
				active = {
					Description = "Is this environment variable set in the executable's environment?";
					Name = active;
				};
				executable = {
					Description = "The executable that contains this environment variable.";
					Name = executable;
				};
				name = {
					Description = "The name of the environment variable to be set in the executable's environment.";
					Name = name;
				};
				value = {
					Description = "The value of the environment variable to be set in the executable's environment.";
					Name = value;
				};
			};
			Description = "An object that represents a environment variable.";
			Name = "environment variable";
			PluralName = "environment variables";
		};
		"XCAppleScriptLaunchArgument" = {
			Attributes = {
				active = {
					Description = "Is this argument passed to the executable at launch?";
					Name = active;
				};
				executable = {
					Description = "The executable that contains this launch argument.";
					Name = executable;
				};
				name = {
					Description = "The name of the argument to be passed at launch.";
					Name = name;
				};
			};
			Description = "An object that represents a launch argument.";
			Name = "launch argument";
			PluralName = "launch arguments";
		};
		"XCAppleScriptSourceDirectory" = {
			Attributes = {
				container = {
					Description = "The executable that contains this source directory.";
					Name = executable;
				};
				path = {
					Description = "The full path of the source directory.";
					Name = path;
				};
			};
			Description = "An object that represents a source directory that is used by the debugger to load source files.";
			Name = "source directory";
			PluralName = "source directories";
		};
		XCBuildConfiguration = {
			Attributes = {
				"appleScriptConfigurationSettingsFile" = {
					Description = "The optional configuration settings file this configuration is based on. May be 'missing value'.";
					Name = "configuration settings file";
				};
				"buildConfigurationType" = {
					Description = "The associated build configuration type.";
					Name = "build configuration type";
				};
				name = {
					Description = "The name of the associated build configuration type.";
					Name = name;
				};
			};
			Description = "A set of build settings for a target or project. Each target and project has one build configuration for each build configuration type in the project. New build configurations are created automatically when a new build configuration type is created.";
			Name = "build configuration";
			PluralName = "build configurations";
		};
		"XCBuildConfigurationType" = {
			Attributes = {
				appleScriptID = {
					Description = "The unique identifier for the build configuration type.";
					Name = id;
				};
				name = {
					Description = "The name of this build configuration type.";
					Name = name;
				};
			};
			Description = "A type of build configuration available for a project and all its targets. Build configuration types can only be created by duplicating an existing build configuration type.";
			Name = "build configuration type";
			PluralName = "build configuration types";
		};
	};
	Commands = {
		Build = {
			Arguments = {
				ReturningBuildLog = {
					Description = "If given, then the full build transcript should be returned when the build finishes. Otherwise, a simple build status is returned.";
					Name = transcript;
				};
				"UsingBuildConfigurationType" = {
					Description = "The build configuration type to use when building. If no build configuration type is given the active build configuration type is used.";
					Name = using;
				};
				WithStaticAnalysis = {
					Description = "Perform static analysis along with the build.";
					Name = "static analysis";
				};
			};
			Description = "Build the indicated target or project in Xcode. If the project is asked to build, then the active target is built.";
			Name = build;
		};
		Clean = {
			Arguments = {
				"RemovingPrecompiledHeaders" = {
					Description = "Whether to remove precompiled headers when cleaning. If not specified, the default set by the last clean operation will be used.";
					Name = "removing precompiled headers";
				};
				ReturningBuildLog = {
					Description = "If given, then the full build transcript should be returned when the clean finishes. Otherwise, a simple clean status is returned.";
					Name = transcript;
				};
				"UsingBuildConfigurationType" = {
					Description = "The build configuration type to use when cleaning. If no build configuration type is given the active build configuration type is used.";
					Name = using;
				};
			};
			Description = "Clean the indicated target or project in Xcode. If the project is asked to build, then the active target is cleaned.";
			Name = clean;
		};
		Debug = {
			Description = "Debug the indicated executable or project under Xcode. If the project is asked to be debugged, then the active executable is debugged. Returns a string indicating success or failure in running the application under the debugger.";
			Name = debug;
		};
		Launch = {
			Description = "Launch the indicated executable or project under Xcode. If the project is asked to be launched, then the active executable is launched. Returns a string indicating success or failure in launching the application.";
			Name = launch;
		};
		Upgrade = {
			Description = "Upgrade the indicated target or project to native targets. If the project is asked to be upgraded to native targets then all eligible targets are upgraded. With a target, the upgraded target is returned. With a project, a list of upgraded targets is returned.";
			Name = upgrade;
		};
	};
	Description = "This suite contains all classes and commands related to Xcode's project model.";
	Enumerations = {
		PBXBuildMessageType = {
			Name = "";
			"PBXBuildMessageType_AnalyzerResult" = {
				Name = "analyzer result";
			};
			"PBXBuildMessageType_Error" = {
				Name = error;
			};
			"PBXBuildMessageType_None" = {
				Name = none;
			};
			"PBXBuildMessageType_Notice" = {
				Name = notice;
			};
			"PBXBuildMessageType_Warning" = {
				Name = warning;
			};
		};
	};
	Name = "Xcode Project Suite";
}