#
#  Generic Diagnostic Message Patterns
#
#  Copyright (c) 2009-2009 Apple Inc.
#  All rights reserved.
#
#  A few words about these patterns.  Every line that starts with '#' is a comment.  Blank lines are ignored.
#  Pattern lines consist of three fields:
#     identifier    actioncode    message pattern
#
#  The identifier is simply a non-negative integer for use by the parser (think "error number" in some compilers).
#  Multiple patterns may have the same identifier.  It may be specified in any format that strtoul() accepts, such
#  as decimal, hexadecimal, or octal.
#
#  The interpretation of the identifier depends on the parser that is doing the pattern matching.  The Clang parser
#  does not use it at all.
#
#  The action code is a four-character code that tells the parser what to do when the pattern matches.  The action
#  code may not contain whitespace, but may be shorter than four characters (in which case it's padded with space
#  characters) or may be longer (in which case only the first four characters are significant).  Generally it is
#  best for parsers to define codes that are exactly four characters long.
#
#  The interpretation of the action code depends on the parser that is doing pattern matching.  The Clang parser
#  understands the following codes:
#     SKIP      skip to the next line (ignoring the entire current line)
#     MESG      emit a new top-level message
#     MESF      emit a new top-level message with the file path of the file for which it was generated appended
#     SMSG      emit a new submessage and add it to the most recent top-level message
#     SMSF      emit a new submessage with the file path of the file for which it was generated appended, and add
#                 it to the most recent top-level message
#
#     IGN>      ignore the literal prefix (but continue pattern-matching starting at the first wildcard)
#     NTE>      elevate the message level to NOTE and continue matching at the first wildcard
#     WRN>      elevate the message level to WARNING and continue matching at the first wildcard
#     ERR>      elevate the message level to ERROR and continue matching at the first wildcard
#
#  The Clang output parser will always try to match a leading path and line number if it can fine it.
#
#  One More Thing:  This information is unpublished and Apple Inc makes no promises or guarantees whatsoever that
#  it will apply to future versions of Xcode.  Incompatible changes are likely before this information is published
#  for general use.  Any use of this information is entirely at your own risk.
#

# Common prefixes
 120    NTE>    note: *
 110    WRN>    warning: *
 100    ERR>    error: *
 101    ERR>    fatal error: *
 102    ERR>    internal error: *

# Basic system errors
9000    ERR>    *Not owner
9001    ERR>    *No such file or directory
9002    ERR>    *No such process
9003    ERR>    *Interrupted system call
9004    ERR>    *I/O error
9005    ERR>    *No such device or address
9006    ERR>    *Arg list too long
9007    ERR>    *Exec format error
9008    ERR>    *Bad file number
9009    ERR>    *No child processes
9010    ERR>    *Operation would block
9011    ERR>    *No more processes
9012    ERR>    *Not enough space
9013    ERR>    *Permission denied
9014    ERR>    *Bad address
9015    ERR>    *Block device required
9016    ERR>    *Device busy
9017    ERR>    *File exists
9018    ERR>    *Cross-device link
9019    ERR>    *No such device
9020    ERR>    *Not a directory
9021    ERR>    *Is a directory
9022    ERR>    *Invalid argument
9023    ERR>    *File table overflow
9024    ERR>    *Too many open files
9025    ERR>    *Not a typewriter
9026    ERR>    *Text file busy
9027    ERR>    *File too large
9028    ERR>    *No space left on device
9029    ERR>    *Illegal seek
9030    ERR>    *Read-only file system
9031    ERR>    *Too many links
9032    ERR>    *Broken pipe
9033    ERR>    *Math argument out of domain of func
9034    ERR>    *Math result not representable
9035    ERR>    *No message of desired type
9036    ERR>    *Identifier removed
9042    ERR>    *Protocol driver not attached
9043    ERR>    *No CSI structure available
9044    ERR>    *Level 2 halted
9045    ERR>    *Deadlock condition
9046    ERR>    *No record locks available
9047    ERR>    *Invalid exchange
9048    ERR>    *Invalid request descriptor
9053    ERR>    *File locking deadlock error
9054    ERR>    *Bad font file format
9055    ERR>    *Device not a stream
9056    ERR>    *No data available
9058    ERR>    *Out of streams resources
9059    ERR>    *Machine is not on the network
9061    ERR>    *Object is remote
9066    ERR>    *Protocol error
9069    ERR>    *Not a data message
9070    ERR>    *File name too long
9071    ERR>    *Value too large for defined data type
9072    ERR>    *Name not unique on network
9073    ERR>    *File descriptor in bad state
9074    ERR>    *Remote address changed
9075    ERR>    *Can not access a needed shared library
9076    ERR>    *Accessing a corrupted shared library
9078    ERR>    *Attempting to link in too many shared libraries
9079    ERR>    *Cannot exec a shared library directly
9080    ERR>    *Illegal byte sequence
9081    ERR>    *Operation not applicable
9082    ERR>    *Too many symbolic links encountered
9083    ERR>    *Interrupted system call should be restarted
9084    ERR>    *Streams pipe error
9085    ERR>    *Directory not empty
9086    ERR>    *Too many users
9087    ERR>    *Socket operation on non-socket
9088    ERR>    *Destination address required
9089    ERR>    *Message too long
9090    ERR>    *Protocol wrong type for socket
9091    ERR>    *Protocol not available
9092    ERR>    *Protocol not supported
9093    ERR>    *Socket type not supported
9094    ERR>    *Operation not supported on transport endpoint
9095    ERR>    *Protocol family not supported
9096    ERR>    *Address family not supported by protocol
9097    ERR>    *Address already in use
9098    ERR>    *Cannot assign requested address
9099    ERR>    *Network is down
9100    ERR>    *Network is unreachable
9101    ERR>    *Network dropped connection because of reset
9102    ERR>    *Software caused connection abort
9103    ERR>    *Connection reset by peer
9104    ERR>    *No buffer space available
9109    ERR>    *Connection timed out
9110    ERR>    *Connection refused
9111    ERR>    *Host is down
9112    ERR>    *No route to host
9115    ERR>    *Stale NFS file handle
9119    ERR>    *Is a named type file
9120    ERR>    *Remote I/O error
