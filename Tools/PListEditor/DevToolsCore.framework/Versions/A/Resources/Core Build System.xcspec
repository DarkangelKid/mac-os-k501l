/*
    Core Build System Properties

    Copyright (c) 1999-2009 Apple Inc.  All rights reserved.

    Defines the names, types, and default values of build properties that are common to all build systems.  These include the most common concepts, such as the path to the source folder, the name of the target, the name of the configuration that's in effect, the version of Mac OS X that is targeted, the architectures for which to build, etc.
*/
(
{   Type = BuildSystem;
    Identifier = com.apple.buildsettings.standard;
    Name = "Standard Properties";
    Options = (
        // Build locations
        {   Name = SDKROOT;
            Type = string;
            DefaultValue = "";
            ConditionFlavors = ( "arch" );
        },
        {   Name = ADDITIONAL_SDKS;
            Type = stringlist;
            DefaultValue = "";
            ConditionFlavors = ( "arch" );
        },
        {   Name = SHARED_PRECOMPS_DIR;
            Type = string;
            DefaultValue = "$(CACHE_ROOT)/SharedPrecompiledHeaders";
        },
        
        // Search paths
        {   Name = HEADER_SEARCH_PATHS;
            Type = pathlist;
            DefaultValue = "";
            ConditionFlavors = ( "arch" );
        },
        
        {   Name = USER_HEADER_SEARCH_PATHS;
            Type = pathlist;
            DefaultValue = "";
            ConditionFlavors = ( "arch" );
        },
        
        {   Name = LIBRARY_SEARCH_PATHS;
            Type = pathlist;
            DefaultValue = "";
            ConditionFlavors = ( "arch" );
        },
        {   Name = FRAMEWORK_SEARCH_PATHS;
            Type = pathlist;
            DefaultValue = "";
            ConditionFlavors = ( "arch" );
        },
        {   Name = REZ_SEARCH_PATHS;
            Type = pathlist;
            DefaultValue = "";
        },
        {   Name = ALWAYS_SEARCH_USER_PATHS;
            Type = bool;
            DefaultValue = YES;
            ConditionFlavors = ( "arch" );
        },
        {   Name = INCLUDED_RECURSIVE_SEARCH_PATH_SUBDIRECTORIES;
            Type = stringlist;
            DefaultValue = "";
        },
        {   Name = EXCLUDED_RECURSIVE_SEARCH_PATH_SUBDIRECTORIES;
            Type = stringlist;
            DefaultValue = "*.nib *.lproj *.framework *.gch *.xcode* (*) CVS .svn .git";
        },

        // Precompilation
        {   Name = PRECOMP_DESTINATION_DIR;
            Type = string;
            DefaultValue = "$(TEMP_DIR)/PrefixHeaders";
        },

        // Versioning
        {   Name = VERSIONING_SYSTEM;
            Type = enum;
            Values = ("", "apple-generic");
            DefaultValue = "";
        },
        {   Name = CURRENT_PROJECT_VERSION;
            Type = string;
            DefaultValue = "";
        },
        {   Name = VERSION_INFO_PREFIX;
            Type = string;
            DefaultValue = "";
        },
        {   Name = VERSION_INFO_SUFFIX;
            Type = string;
            DefaultValue = "";
        },
        {   Name = VERSION_INFO_BUILDER;
            Type = string;
            DefaultValue = "";
        },
        {   Name = VERSION_INFO_EXPORT_DECL;
            Type = string;
            DefaultValue = "";
        },
        
        {   Name = VERSION_INFO_FILE;
            Type = string;
            DefaultValue = "";
        },
        
        // Build options
        {   Name = DEBUG_INFORMATION_FORMAT;
            Type = enum;
            Values = ("stabs", "dwarf", "dwarf-with-dsym");
            DefaultValue = "dwarf";
        },
        {   Name = DWARF_DSYM_FILE_NAME;
            Type = string;
            UIType = string;
            DefaultValue = "$(FULL_PRODUCT_NAME).dSYM";
        },
        {   Name = DWARF_DSYM_FOLDER_PATH;
            Type = string;
            UIType = string;
            DefaultValue = "$(CONFIGURATION_BUILD_DIR)";
        },
        {   Name = SCAN_ALL_SOURCE_FILES_FOR_INCLUDES;
            Type = bool;
            DefaultValue = NO;
        },
        {   Name = GENERATE_PROFILING_CODE;
            Type = bool;
            DefaultValue = NO;
        },
        {   Name = PRECOMPS_INCLUDE_HEADERS_FROM_BUILT_PRODUCTS_DIR;
            Type = bool;
            DefaultValue = YES;
        },
        {   Name = ENABLE_OPENMP_SUPPORT;
            Type = bool;
            DefaultValue = NO;
        },
        {   Name = RUN_CLANG_STATIC_ANALYZER;
            Type = Boolean;
            DefaultValue = NO;
            Category = "BuildOptions";
        },
        {   Name = EXCLUDED_INSTALLSRC_SUBDIRECTORY_PATTERNS;
            Type = stringlist;
            DefaultValue = ".svn .git CVS";
        },

        // Linking
        {   Name = MACH_O_TYPE;
            Type = enum;
            Values = ( "mh_execute", "mh_dylib", "mh_bundle", "staticlib", "mh_object" );
            DefaultValue = "";
        },
        {   Name = INIT_ROUTINE;
            Type = string;
            DefaultValue = "";
        },
        {   Name = PREBINDING;
            Type = bool;
            DefaultValue = YES;
        },
        {   Name = LINK_WITH_STANDARD_LIBRARIES;
            Type = bool;
            DefaultValue = YES;
        },
        {   Name = KEEP_PRIVATE_EXTERNS;
            Type = bool;
            DefaultValue = NO;
        },
        {   Name = EXPORTED_SYMBOLS_FILE;
            Type = string;
            DefaultValue = "";
        },
        {   Name = UNEXPORTED_SYMBOLS_FILE;
            Type = string;
            DefaultValue = "";
        },
        {   Name = SEPARATE_SYMBOL_EDIT;
            Type = bool;
            DefaultValue = NO;
        },
        {   Name = DYLIB_CURRENT_VERSION;
            Type = string;
            DefaultValue = "";
        },
        {   Name = DYLIB_COMPATIBILITY_VERSION;
            Type = string;
            DefaultValue = "";
        },
        {   Name = LD_DYLIB_INSTALL_NAME;
            Type = path;
            DefaultValue = "";
        },
        {   Name = SECTORDER_FLAGS;
            Type = stringlist;
            UIType = string;
            DefaultValue = "";
            ConditionFlavors = ( "arch" );
        },
        {   Name = ORDER_FILE;
            Type = string;
            DefaultValue = "";
        },
        {   Name = LD_RUNPATH_SEARCH_PATHS;
            Type = stringlist;
            DefaultValue = "";
        },
        {   Name = LD_GENERATE_MAP_FILE;
            Type = bool;
            DefaultValue = NO;
        },
        {   Name = LD_MAP_FILE_PATH;
            Type = path;
            DefaultValue = "$(TARGET_TEMP_DIR)/$(PRODUCT_NAME)-LinkMap-$(CURRENT_VARIANT)-$(CURRENT_ARCH).txt";
        },
        {   Name = WARNING_LDFLAGS;
            Type = stringlist;
            UIType = string;
            DefaultValue = "";
            ConditionFlavors = ( "arch" );
        },
        {   Name = OTHER_LDFLAGS;
            Type = stringlist;
            UIType = string;
            DefaultValue = "";
            ConditionFlavors = ( "arch" );
        },
        {   Name = DEAD_CODE_STRIPPING;
            Type = bool;
            DefaultValue = NO;
        },
        {   Name = PRESERVE_DEAD_CODE_INITS_AND_TERMS;
            Type = bool;
            DefaultValue = NO;
        },
        {   Name = LD_OPENMP_FLAGS;
            Type = StringList;
            DefaultValue = "-fopenmp";
        },
        {   Name = BUNDLE_LOADER;
            Type = string;
            DefaultValue = "";
        },
        {   Name = STANDARD_C_PLUS_PLUS_LIBRARY_TYPE;
            Type = enum;
            Values = ( "dynamic", "static" );
            DefaultValue = "dynamic";
            CommandLineArgs = {
                "dynamic" = ();
                "static" = ();
            };
        },
        {   Name = LINKER_DISPLAYS_MANGLED_NAMES;
            Type = bool;
            DefaultValue = NO;
            CommandLineArgs = { YES = ("-Xlinker", "--no-demangle"); NO = (); };
        },
        {   Name = GENERATE_MASTER_OBJECT_FILE;
            Type = bool;
            DefaultValue = NO;
        },
        {   Name = PRELINK_LIBS;
            Type = stringlist; 
            DefaultValue = ""; 
        },
        {   Name = PRELINK_FLAGS;
            Type = stringlist; 
            DefaultValue = ""; 
        },

        // Packaging
        {   Name = PRODUCT_NAME;
            Type = string;
            DefaultValue = "";
        },
        {   Name = EXECUTABLE_PREFIX;
            Type = string;
            DefaultValue = "";
        },
        {   Name = EXECUTABLE_EXTENSION;
            Type = string;
            DefaultValue = "";
        },
        {   Name = WRAPPER_EXTENSION;
            Type = string;
            DefaultValue = "";
        },
        {   Name = PRIVATE_HEADERS_FOLDER_PATH;
            Type = string;
            DefaultValue = "";
        },
        {   Name = PUBLIC_HEADERS_FOLDER_PATH;
            Type = string;
            DefaultValue = "";
        },
        {   Name = GENERATE_PKGINFO_FILE;
            Type = bool;
            DefaultValue = NO;
        },
        
        {   Name = INFOPLIST_FILE;
            Type = string;
            DefaultValue = "";
        },
        {   Name = INFOPLIST_PREPROCESS;
            Type = bool;
            DefaultValue = NO;
        },
        {   Name = INFOPLIST_EXPAND_BUILD_SETTINGS;
            Type = bool;
            DefaultValue = YES;
        },
        {   Name = INFOPLIST_OUTPUT_FORMAT;
            Type = Enumeration;
            DefaultValue = "same-as-input";
        },
        {   Name = PLIST_FILE_OUTPUT_FORMAT;
            Type = Enumeration;
            DefaultValue = "same-as-input";
        },
        {   Name = STRINGS_FILE_OUTPUT_ENCODING;
            Type = Enumeration;
            DefaultValue = "UTF-16";
        },
        {   Name = APPLY_RULES_IN_COPY_FILES;
            Type = bool;
            DefaultValue = NO;
        },
        
        {   Name = INFOPLIST_PREFIX_HEADER;
            Type = string;
            DefaultValue = "";
        },
        {   Name = INFOPLIST_OTHER_PREPROCESSOR_FLAGS;
            Type = string;
            DefaultValue = "";
        },
        {   Name = INFOPLIST_PREPROCESSOR_DEFINITIONS;
            Type = stringlist;
            DefaultValue = "";
            CommandLineArgs = ( "-D${0}" );
        },
        
        {   Name = COPYING_PRESERVES_HFS_DATA;
            Type = bool;
            DefaultValue = NO;
        },

        // Deployment
        {   Name = MACOSX_DEPLOYMENT_TARGET;
            Type = enum;
            Values = ("", 10.1, 10.2, 10.3, 10.4, 10.5, 10.6);
            DefaultValue = "$(inherited)";
            ConditionFlavors = ( "arch" );
        },
        {   Name = DEPLOYMENT_LOCATION;
            Type = bool;
            DefaultValue = NO;
        },
        {   Name = DEPLOYMENT_POSTPROCESSING;
            Type = bool;
            DefaultValue = NO;
        },
        {   Name = INSTALL_PATH;
            Type = string;
            DefaultValue = "";
        },
        {   Name = SKIP_INSTALL;
            Type = bool;
            DefaultValue = NO;
        },
        {   Name = SEPARATE_STRIP;
            Type = bool;
            DefaultValue = NO;
        },
        {   Name = STRIP_STYLE;
            Type = enum;
            Values = ( "all", "non-global", "debugging" );
            CommandLineArgs = { "all" = (); "non-global" = ("-x"); "debugging" = ("-S"); };
            DefaultValue = "all";
        },
        {   Name = STRIPFLAGS;
            Type = stringlist;
            UIType = string;
            DefaultValue = "";
        },
        {   Name = ALTERNATE_PERMISSIONS_FILES;
            Type = stringlist;
            DefaultValue = "";
        },
        {   Name = ALTERNATE_OWNER;
            Type = string;
            DefaultValue = "$(INSTALL_OWNER)";
        },
        {   Name = ALTERNATE_GROUP;
            Type = string;
            DefaultValue = "$(INSTALL_GROUP)";
        },
        {   Name = ALTERNATE_MODE;
            Type = string;
            DefaultValue = "$(INSTALL_MODE_FLAG)";
        },
        
        // Unit Testing
        {   Name = TEST_HOST;
            Type = string;
            DefaultValue = "";
        },
        {   Name = TEST_RIG;
            Type = string;
            DefaultValue = "";
        },

        // Extra definitions of private build settings.
        {   Name = EXCLUDED_SOURCE_FILE_NAMES;
            Type = stringlist;
            DefaultValue = "";
        },
        {   Name = INCLUDED_SOURCE_FILE_NAMES;
            Type = stringlist;
            DefaultValue = "";
        },
        
        // Kernel Module
        {   Name = MODULE_NAME;
            Type = string;
            DefaultValue = "";
        },
        {   Name = MODULE_VERSION;
            Type = string;
            DefaultValue = "";
        },
        {   Name = MODULE_START;
            Type = string;
            DefaultValue = "";
        },
        {   Name = MODULE_STOP;
            Type = string;
            DefaultValue = "";
        },
    );
},

{
    Type = BuildSystem;
    Identifier = com.apple.build-system.core;
    Name = "Core Build System";
    BasedOn = com.apple.buildsettings.standard;
    IsGlobalDomainInUI = Yes;
    Properties = (
        // Architectures
        {   Name = ARCHS;
            Type = StringList;
            UIType = Architectures;
            DefaultValue = "$(NATIVE_ARCH)";
            ConditionFlavors = ( "sdk" );
            Category = "Architectures";
            AvoidEmptyValue = YES;
        },
        {   Name = ONLY_ACTIVE_ARCH;
            Type = Boolean;
            DefaultValue = NO;
            Category = "Architectures";
        },
        {   Name = VALID_ARCHS;
            Type = StringList;
            // Default value is set dynamically based on set of available architectures
            Category = "Architectures";
            ConditionFlavors = ( "sdk" );
        },
        {   Name = SDKROOT;
            Type = Path;
            UIType = SDKRoot;
            DefaultValue = "";
            ConditionFlavors = ( "arch" );
            Category = "Architectures";
        },
        {   Name = ADDITIONAL_SDKS;
            Type = StringList;
            DefaultValue = "";
            ConditionFlavors = ( "arch" );
            Category = "Architectures";
        },

        // Build Locations
        {   Name = SYMROOT;
            Type = Path;
            DefaultValue = "build";
            Category = "Build Locations";
        },
        {   Name = OBJROOT;
            Type = Path;
            DefaultValue = "$(SYMROOT)";
            Category = "Build Locations";
        },
        {   Name = CONFIGURATION_BUILD_DIR;
            Type = Path;
            DefaultValue = "$(BUILD_DIR)";
            Category = "Build Locations";
        },
        {   Name = CONFIGURATION_TEMP_DIR;
            Type = Path;
            DefaultValue = "$(PROJECT_TEMP_DIR)";
            Category = "Build Locations";
        },
        {   Name = SHARED_PRECOMPS_DIR;
            Type = String;
            Category = "Build Locations";
            DefaultValue = "$(CACHE_ROOT)/SharedPrecompiledHeaders";

        },


        // Search Paths
        {   Name = HEADER_SEARCH_PATHS;
            Type = PathList;
            Category = "Search Paths";
            ConditionFlavors = ( "arch", "sdk" );
            DefaultValue = "";
        },
        {   Name = USER_HEADER_SEARCH_PATHS;
            Type = PathList;
            Category = "Search Paths";
            ConditionFlavors = ( "arch" );
            DefaultValue = "";
        },
        {   Name = LIBRARY_SEARCH_PATHS;
            Type = PathList;
            Category = "Search Paths";
            ConditionFlavors = ( "arch", "sdk" );
            DefaultValue = "";
        },
        {   Name = FRAMEWORK_SEARCH_PATHS;
            Type = PathList;
            Category = "Search Paths";
            ConditionFlavors = ( "arch", "sdk" );
            DefaultValue = "";
        },
        {   Name = REZ_SEARCH_PATHS;
            Type = PathList;
            Category = "Search Paths";
            ConditionFlavors = ( "sdk" );
            DefaultValue = "";
        },
        {   Name = ALWAYS_SEARCH_USER_PATHS;
            Type = Boolean;
            Category = "Search Paths";
            ConditionFlavors = ( "arch" );
            DefaultValue = YES;
        },
        {   Name = INCLUDED_RECURSIVE_SEARCH_PATH_SUBDIRECTORIES;
            Type = StringList;
            Category = "Search Paths";
            DefaultValue = "";
        },
        {   Name = EXCLUDED_RECURSIVE_SEARCH_PATH_SUBDIRECTORIES;
            Type = StringList;
            Category = "Search Paths";
            DefaultValue = "*.nib *.lproj *.framework *.gch *.xcode* (*) CVS .svn .git";
        },

        // Versioning
        {   Name = VERSIONING_SYSTEM;
            Type = Enumeration;
            Category = Versioning;
            Values = (
                {   Value = "";
                },
                {   Value = "apple-generic";
                },
            );
            DefaultValue = "";
        },
        {   Name = CURRENT_PROJECT_VERSION;
            Type = String;
            Category = Versioning;
            DefaultValue = "";
        },
        {   Name = VERSION_INFO_PREFIX;
            Type = String;
            Category = Versioning;
            DefaultValue = "";
        },
        {   Name = VERSION_INFO_SUFFIX;
            Type = String;
            Category = Versioning;
            DefaultValue = "";
        },
        {   Name = VERSION_INFO_BUILDER;
            Type = String;
            Category = Versioning;
            DefaultValue = "";
        },
        {   Name = VERSION_INFO_EXPORT_DECL;
            Type = String;
            Category = Versioning;
            DefaultValue = "";
        },
        {   Name = VERSION_INFO_FILE;
            Type = String;
            Category = Versioning;
            DefaultValue = "";
        },

        // Build Options
        {   Name = BUILD_VARIANTS;
            Type = StringList;
            DefaultValue = "normal";
            AvoidEmptyValue = YES;
            Category = "BuildOptions";
        },
        {   Name = DEBUG_INFORMATION_FORMAT;
            Type = Enumeration;
            Category = BuildOptions;
            Values = (
                {   Value = "stabs";
                },
                {   Value = "dwarf";
                },
                {   Value = "dwarf-with-dsym";
                },
            );
            ConditionFlavors = ( "arch", "sdk" );
            DefaultValue = "";
        },
        {   Name = SCAN_ALL_SOURCE_FILES_FOR_INCLUDES;
            Type = Boolean;
            DefaultValue = NO;
            Category = "BuildOptions";
        },
        {   Name = GENERATE_PROFILING_CODE;
            Type = Boolean;
            Category = BuildOptions;
            DefaultValue = "";
        },
        {   Name = PRECOMPS_INCLUDE_HEADERS_FROM_BUILT_PRODUCTS_DIR;
            Type = Boolean;
            Category = BuildOptions;
            DefaultValue = YES;
        },
        {   Name = ENABLE_OPENMP_SUPPORT;
            Type = Boolean;
            DefaultValue = NO;
            Category = "BuildOptions";
        },
        
        // Linking
        {   Name = MACH_O_TYPE;
            Type = Enumeration;
            Category = Linking;
            Values = (
                {   Value = mh_execute;
                },
                {   Value = mh_dylib;
                },
                {   Value = mh_bundle;
                },
                {   Value = staticlib;
                },
                {   Value = mh_object;
                },
            );
            DefaultValue = "";
        },
        {   Name = INIT_ROUTINE;
            Type = String;
            Category = Linking;
            DefaultValue = "";
        },
        {   Name = PREBINDING;
            Type = Boolean;
            Category = Linking;
            DefaultValue = YES;
        },
        {   Name = LINK_WITH_STANDARD_LIBRARIES;
            Type = Boolean;
            Category = Linking;
            DefaultValue = YES;
        },
        {   Name = KEEP_PRIVATE_EXTERNS;
            Type = Boolean;
            Category = Linking;
            DefaultValue = NO;
        },
        {   Name = EXPORTED_SYMBOLS_FILE;
            Type = String;
            Category = Linking;
            DefaultValue = "";
        },
        {   Name = UNEXPORTED_SYMBOLS_FILE;
            Type = String;
            Category = Linking;
            DefaultValue = "";
        },
        {   Name = SEPARATE_SYMBOL_EDIT;
            Type = Boolean;
            Category = Linking;
            DefaultValue = NO;
        },
        {   Name = BUNDLE_LOADER;
            Type = String;
            Category = Linking;
            DefaultValue = "";
        },
        {   Name = DYLIB_CURRENT_VERSION;
            Type = String;
            Category = Linking;
            DefaultValue = "";
        },
        {   Name = DYLIB_COMPATIBILITY_VERSION;
            Type = String;
            Category = Linking;
            DefaultValue = "";
        },
        {   Name = LD_DYLIB_INSTALL_NAME;
            Type = Path;
            Category = Linking;
            DefaultValue = "";
        },
        {   Name = SECTORDER_FLAGS;
            Type = StringList;
            Category = Linking;
            ConditionFlavors = ( "arch", "sdk" );
            DefaultValue = "";
        },
        {   Name = ORDER_FILE;
            Type = String;
            Category = Linking;
            DefaultValue = "";
        },
        {   Name = LD_RUNPATH_SEARCH_PATHS;
            Type = StringList;
            Category = Linking;
            DefaultValue = "";
        },
        {   Name = LD_GENERATE_MAP_FILE;
            Type = Boolean;
            Category = Linking;
            DefaultValue = NO;
        },
        {   Name = LD_MAP_FILE_PATH;
            Type = Path;
            Category = Linking;
            DefaultValue = "$(TARGET_TEMP_DIR)/$(PRODUCT_NAME)-LinkMap-$(CURRENT_VARIANT)-$(CURRENT_ARCH).txt";
        },
        {   Name = DEAD_CODE_STRIPPING;
            Type = Boolean;
            Category = Linking;
            ConditionFlavors = ( "sdk" );
            DefaultValue = NO;
        },
        {   Name = PRESERVE_DEAD_CODE_INITS_AND_TERMS;
            Type = Boolean;
            Category = Linking;
            ConditionFlavors = ( "sdk" );
            DefaultValue = NO;
        },
        {   Name = LD_OPENMP_FLAGS;
            Type = StringList;
            Category = Linking;
            DefaultValue = "-fopenmp";
        },
        {   Name = STANDARD_C_PLUS_PLUS_LIBRARY_TYPE;
            Type = Enumeration;
            Category = Linking;
            Values = (
                {   Value = dynamic;
                },
                {   Value = static;
                },
            );
            DefaultValue = "dynamic";
        },
        {   Name = LINKER_DISPLAYS_MANGLED_NAMES;
            Type = Boolean;
            Category = Linking;
            DefaultValue = NO;
        },
        {   Name = WARNING_LDFLAGS;
            Type = StringList;
            Category = Linking;
            ConditionFlavors = ( "arch", "sdk" );
            DefaultValue = "";
        },
        {   Name = OTHER_LDFLAGS;
            Type = StringList;
            Category = Linking;
            ConditionFlavors = ( "arch", "sdk" );
            DefaultValue = "";
        },
        {   Name = GENERATE_MASTER_OBJECT_FILE;
            Type = Boolean;
            Category = Linking;
            DefaultValue = NO;
        },
        {   Name = PRELINK_LIBS;
            Type = StringList;
            Category = Linking;
            ConditionFlavors = ( "arch", "sdk" );
            DefaultValue = "";
        },
        {   Name = PRELINK_FLAGS;
            Type = StringList;
            ConditionFlavors = ( "arch", "sdk" );
            Category = Linking;
            DefaultValue = "";
        },
     
        // Code Signing
        {   Name = CODE_SIGN_IDENTITY;
            Type = CodeSignIdentity;
            Category = "Code Signing";
            ConditionFlavors = ( "sdk" );
            DefaultValue = "";
        },
        {   Name = CODE_SIGN_RESOURCE_RULES_PATH;
            Type = String;
            Category = "Code Signing";
            ConditionFlavors = ( "sdk" );
            DefaultValue = "";
        },
        {   Name = OTHER_CODE_SIGN_FLAGS;
            Type = String;
            Category = "Code Signing";
            ConditionFlavors = ( "sdk" );
            DefaultValue = "";
        },
        {   Name = CODE_SIGN_ENTITLEMENTS;
            Type = String;
            Category = "Code Signing";
            ConditionFlavors = ( "sdk" );
            DefaultValue = "";
        },
        
        // Packaging
        {   Name = PRODUCT_NAME;
            Type = String;
            Category = Packaging;
            DefaultValue = "";
        },
        {   Name = EXECUTABLE_PREFIX;
            Type = String;
            Category = Packaging;
            DefaultValue = "";
        },
        {   Name = EXECUTABLE_EXTENSION;
            Type = String;
            Category = Packaging;
            DefaultValue = "";
        },
        {   Name = WRAPPER_EXTENSION;
            Type = String;
            Category = Packaging;
            DefaultValue = "";
        },
        {   Name = PRIVATE_HEADERS_FOLDER_PATH;
            Type = String;
            Category = Packaging;
            DefaultValue = "";
        },
        {   Name = PUBLIC_HEADERS_FOLDER_PATH;
            Type = String;
            Category = Packaging;
            DefaultValue = "";
        },
        {   Name = GENERATE_PKGINFO_FILE;
            Type = Boolean;
            Category = Packaging;
            ConditionFlavors = ( "sdk" );
            DefaultValue = NO;
        },
        {   Name = INFOPLIST_FILE;
            Type = String;
            Category = Packaging;
            ConditionFlavors = ( "sdk" );
            DefaultValue = "";
        },
        {   Name = INFOPLIST_PREPROCESS;
            Type = Boolean;
            Category = Packaging;
            ConditionFlavors = ( "sdk" );
            DefaultValue = NO;
        },
        {   Name = INFOPLIST_EXPAND_BUILD_SETTINGS;
            Type = Boolean;
            Category = Packaging;
            ConditionFlavors = ( "sdk" );
            DefaultValue = YES;
        },
        {   Name = INFOPLIST_OUTPUT_FORMAT;
            Type = Enumeration;
            Category = Packaging;
            ConditionFlavors = ( "sdk" );
            Values = ("same-as-input", "XML", "binary");
            DefaultValue = "same-as-input";
        },
        {   Name = PLIST_FILE_OUTPUT_FORMAT;
            Type = Enumeration;
            Category = Packaging;
            ConditionFlavors = ( "sdk" );
            Values = ("same-as-input", "XML", "binary");
            DefaultValue = "same-as-input";
        },
        {   Name = STRINGS_FILE_OUTPUT_ENCODING;
            Type = Enumeration;
            Category = Packaging;
            ConditionFlavors = ( "sdk" );
            Values = ("UTF-16", "UTF-8", "binary");
            DefaultValue = "UTF-16";
        },
        {   Name = APPLY_RULES_IN_COPY_FILES;
            Category = Packaging;
            Type = Boolean;
            ConditionFlavors = ( "sdk" );
            DefaultValue = NO;
        },
        {   Name = INFOPLIST_PREFIX_HEADER;
            Type = String;
            Category = Packaging;
            ConditionFlavors = ( "sdk" );
            DefaultValue = "";
        },
        {   Name = INFOPLIST_PREPROCESSOR_DEFINITIONS;
            Type = StringList;
            Category = Packaging;
            ConditionFlavors = ( "sdk" );
            DefaultValue = "";
        },
        {   Name = INFOPLIST_OTHER_PREPROCESSOR_FLAGS;
            Type = String;
            Category = Packaging;
            ConditionFlavors = ( "sdk" );
            DefaultValue = "";
        },
        {   Name = COPYING_PRESERVES_HFS_DATA;
            Type = Boolean;
            Category = Packaging;
            ConditionFlavors = ( "sdk" );
            DefaultValue = NO;
        },
        {   Name = FRAMEWORK_VERSION;
            Type = String;
            ConditionFlavors = ( "sdk" );
            DefaultValue = "A";
            Category = Packaging;
        },

        // Deployment
        {   Name = MACOSX_DEPLOYMENT_TARGET;
            Type = Enumeration;
            Values = ("", 10.1, 10.2, 10.3, 10.4, 10.5, 10.6);
            ConditionFlavors = ( "arch", "sdk" );
            // Default value is set dynamically
            Category = "Deployment";
        },
        {   Name = DEPLOYMENT_LOCATION;
            Type = Boolean;
            Category = Deployment;
            ConditionFlavors = ( "sdk" );
            DefaultValue = NO;
        },
        {   Name = DEPLOYMENT_POSTPROCESSING;
            Type = Boolean;
            Category = Deployment;
            ConditionFlavors = ( "sdk" );
            DefaultValue = NO;
        },
        {   Name = DSTROOT;
            Type = Path;
            DefaultValue = "/tmp/$(PROJECT_NAME).dst";
            ConditionFlavors = ( "sdk" );
            Category = "Deployment";
        },
        {   Name = INSTALL_PATH;
            Type = String;
            Category = Deployment;
            ConditionFlavors = ( "sdk" );
            DefaultValue = "";
        },
        {   Name = SKIP_INSTALL;
            Type = Boolean;
            Category = Deployment;
            ConditionFlavors = ( "sdk" );
            DefaultValue = NO;
        },
        {   Name = STRIP_INSTALLED_PRODUCT;
            Type = Boolean;
            DefaultValue = YES;
            ConditionFlavors = ( "sdk" );
            Category = "Deployment";
        },
        {   Name = SEPARATE_STRIP;
            Type = Boolean;
            Category = Deployment;
            ConditionFlavors = ( "sdk" );
            DefaultValue = NO;
        },
        {   Name = STRIP_STYLE;
            Type = Enumeration;
            Category = Deployment;
            Values = (
                {   Value = all;
                },
                {   Value = "non-global";
                },
                {   Value = debugging;
                },
            );
            ConditionFlavors = ( "sdk" );
            DefaultValue = "all";
        },
        {   Name = STRIPFLAGS;
            Type = StringList;
            Category = Deployment;
            ConditionFlavors = ( "sdk" );
            DefaultValue = "";
        },
        {   Name = COPY_PHASE_STRIP;
            Type = Boolean;
            DefaultValue = YES;
            ConditionFlavors = ( "sdk" );
            Category = "Deployment";
        },
        {   Name = INSTALL_OWNER;
            Type = String;
            DefaultValue = "$(USER)";
            ConditionFlavors = ( "sdk" );
            Category = "Deployment";
        },
        {   Name = INSTALL_GROUP;
            Type = String;
            DefaultValue = "$(GROUP)";
            ConditionFlavors = ( "sdk" );
            Category = "Deployment";
        },
        {   Name = INSTALL_MODE_FLAG;
            Type = String;
            DefaultValue = "u+w,go-w,a+rX";
            ConditionFlavors = ( "sdk" );
            Category = "Deployment";
        },
        {   Name = ALTERNATE_PERMISSIONS_FILES;
            Type = StringList;
            Category = Deployment;
            ConditionFlavors = ( "sdk" );
            DefaultValue = "";
        },
        {   Name = ALTERNATE_OWNER;
            Type = String;
            Category = Deployment;
            ConditionFlavors = ( "sdk" );
            DefaultValue = "$(INSTALL_OWNER)";
        },
        {   Name = ALTERNATE_GROUP;
            Type = String;
            Category = Deployment;
            ConditionFlavors = ( "sdk" );
            DefaultValue = "$(INSTALL_GROUP)";
        },
        {   Name = ALTERNATE_MODE;
            Type = String;
            Category = Deployment;
            ConditionFlavors = ( "sdk" );
            DefaultValue = "$(INSTALL_MODE_FLAG)";
        },

        // Unit Testing
        {   Name = TEST_HOST;
            Type = String;
            Category = UnitTesting;
            DefaultValue = "";
        },
        {   Name = TEST_RIG;
            Type = String;
            Category = UnitTesting;
            DefaultValue = "";
        },
        {   Name = OTHER_TEST_FLAGS;
            Type = StringList;
            Category = UnitTesting;
            DefaultValue = "";
        },

        // KernelModule
        {   Name = MODULE_NAME;
            Type = String;
            Category = KernelModule;
            DefaultValue = "";
        },
        {   Name = MODULE_VERSION;
            Type = String;
            Category = KernelModule;
            DefaultValue = "";
        },
        {   Name = MODULE_START;
            Type = String;
            Category = KernelModule;
            DefaultValue = "";
        },
        {   Name = MODULE_STOP;
            Type = String;
            Category = KernelModule;
            DefaultValue = "";
        },





        {   Name = BUILD_STYLE;
            Type = String;
            DefaultValue = "";
        },
        {   Name = CONFIGURATION;
            Type = String;
            DefaultValue = "";
        },

        {   Name = SRCROOT;
            Type = Path;
            DefaultValue = ".";
        },

        {   Name = SOURCE_ROOT;
            Type = Path;
            DefaultValue = "$(SRCROOT)";
        },
        {   Name = TEMP_ROOT;
            Type = Path;
            DefaultValue = "$(OBJROOT)";
        },
        {   Name = BUILD_ROOT;
            Type = Path;
            DefaultValue = "$(SYMROOT)";
        },
        {   Name = INSTALL_ROOT;
            Type = Path;
            DefaultValue = "$(DSTROOT)";
        },

        {   Name = PROJECT_DIR;
            Type = Path;
            DefaultValue = "$(SRCROOT)";
        },
        {   Name = BUILD_DIR;
            Type = Path;
            DefaultValue = "$(SYMROOT)";
        },

        {   Name = PROJECT_TEMP_DIR;
            Type = Path;
            DefaultValue = "$(OBJROOT)/$(PROJECT_NAME).build";
        },
        {   Name = TARGET_TEMP_DIR;
            Type = Path;
            DefaultValue = "$(CONFIGURATION_TEMP_DIR)/$(TARGET_NAME).build";
        },

        {   Name = TEMP_DIR;
            Type = Path;
            DefaultValue = "$(TARGET_TEMP_DIR)";
        },

        {   Name = OBJECT_FILE_DIR;
            Type = Path;
            DefaultValue = "$(TEMP_DIR)/Objects";
        },
        {   Name = CLASS_FILE_DIR;
            Type = Path;
            DefaultValue = "$(TEMP_DIR)/JavaClasses";
        },
        {   Name = FILE_LIST;
            Type = Path;
            DefaultValue = "$(OBJECT_FILE_DIR)/LinkFileList";
        },
        {   Name = DERIVED_FILE_DIR;
            Type = Path;
            DefaultValue = "$(TEMP_DIR)/DerivedSources";
        },
        {   Name = INSTALL_DIR;
            Type = Path;
            DefaultValue = "$(DSTROOT)$(INSTALL_PATH)";
        },

        {   Name = PROJECT_DERIVED_FILE_DIR;
            Type = Path;
            DefaultValue = "$(OBJROOT)/$(PROJECT_NAME).build/DerivedSources";
        },
        {   Name = SHARED_DERIVED_FILE_DIR;
            Type = Path;
            DefaultValue = "$(BUILT_PRODUCTS_DIR)/DerivedSources";
        },

        {   Name = TARGET_BUILD_DIR;
            Type = Path;
            DefaultValue = "$(CONFIGURATION_BUILD_DIR)";
        },
        {   Name = BUILT_PRODUCTS_DIR;
            Type = Path;
            DefaultValue = "$(CONFIGURATION_BUILD_DIR)";
        },

        {   Name = ENABLE_HEADER_DEPENDENCIES;
            Type = Boolean;
            DefaultValue = YES;
        },
        {   Name = PATH_PREFIXES_EXCLUDED_FROM_HEADER_DEPENDENCIES;
            Type = PathList;
            DefaultValue = "/usr/include /usr/local/include /System/Library/Frameworks /System/Library/PrivateFrameworks $(SYSTEM_DEVELOPER_DIR)/Headers $(SYSTEM_DEVELOPER_DIR)/SDKs $(SYSTEM_DEVELOPER_DIR)/Platforms";
        },
        {   Name = DO_HEADER_SCANNING_IN_JAM;       // This setting will be removed soon
            Type = Boolean;
            DefaultValue = NO;
        },

        {   Name = TEMP_FILE_DIR;
            Type = Path;
            DefaultValue = "$(TEMP_DIR)";
        },
        {   Name = DERIVED_SOURCES_DIR;
            Type = Path;
            DefaultValue = "$(DERIVED_FILE_DIR)";
        },

        {   Name = NATIVE_ARCH;
            Type = String;
            // Default value is set dynamically based on the type of machine on which Xcode is running
        },
        {   Name = NATIVE_ARCH_32_BIT;
            Type = String;
            // Default value is set dynamically based on the type of machine on which Xcode is running
        },
        {   Name = NATIVE_ARCH_64_BIT;
            Type = String;
            // Default value is set dynamically based on the type of machine on which Xcode is running
        },
        {   Name = NATIVE_ARCH_ACTUAL;
            Type = String;
            // Default value is set dynamically based on the type of machine on which Xcode is running
        },
        {   Name = MAC_OS_X_VERSION_MAJOR;
            Type = String;
            DefaultValue = 1060;
        },
        {   Name = MAC_OS_X_VERSION_MINOR;
            Type = String;
            DefaultValue = 0600;
        },
        {   Name = MAC_OS_X_VERSION_ACTUAL;
            Type = String;
            DefaultValue = 1060;
        },
        {   Name = XCODE_VERSION_MAJOR;
            Type = String;
            DefaultValue = 0300;
        },
        {   Name = XCODE_VERSION_MINOR;
            Type = String;
            DefaultValue = 0320;
        },
        {   Name = XCODE_VERSION_ACTUAL;
            Type = String;
            DefaultValue = 0320;
        },
        {   Name = REMOVE_CVS_FROM_RESOURCES;
            Type = Boolean;
            DefaultValue = YES;
        },
        {   Name = REMOVE_SVN_FROM_RESOURCES;
            Type = Boolean;
            DefaultValue = YES;
        },
        {   Name = REMOVE_GIT_FROM_RESOURCES;
            Type = Boolean;
            DefaultValue = YES;
        },

        {   Name = OPTIMIZATION_LEVEL;
            Type = Enumeration;
            DefaultValue = 0;
            ConditionFlavors = ( "arch" );
        },
        {   Name = DEBUGGING_SYMBOLS;
            Type = Boolean;
            DefaultValue = YES;
            ConditionFlavors = ( "arch", "sdk" );
        },
        {   Name = PROFILING_CODE;
            Type = Boolean;
            DefaultValue = NO;
            ConditionFlavors = ( "arch", "sdk" );
        },

        {   Name = OTHER_CFLAGS;
            Type = StringList;
            ConditionFlavors = ( "arch", "sdk" );
        },
        {   Name = OTHER_CPLUSPLUSFLAGS;
            Type = StringList;
            DefaultValue = "$(OTHER_CFLAGS)";
            ConditionFlavors = ( "arch", "sdk" );
        },

        {   Name = CC;
            Type = Path;
            ConditionFlavors = ( "arch", "sdk" );
        },

        {   Name = JAVA_COMPILER;
            Type = Path;
            DefaultValue = "/usr/bin/javac";
        },
        {   Name = JAVA_ARCHIVE_CLASSES;
            Type = Boolean;
            DefaultValue = YES;
        },
        {   Name = JAVA_ARCHIVE_TYPE;
            Type = Enumeration;
            DefaultValue = JAR;
        },
        {   Name = JAVA_APP_STUB;
            Type = Path;
            DefaultValue = "$(SYSTEM_LIBRARY_DIR)/Frameworks/JavaVM.framework/Resources/MacOS/JavaApplicationStub";
        },
        {   Name = JAVA_JAR_FLAGS;
            Type = StringList;
            DefaultValue = "cv";
        },
        {   Name = JAVA_SOURCE_SUBDIR;
            Type = Path;
            DefaultValue = ".";
        },
        {   Name = JAVA_FRAMEWORK_RESOURCES_DIRS;
            Type = PathList;
            DefaultValue = "Resources";
        },
        {   Name = JAVA_FRAMEWORK_JARS;
            Type = PathList;
            DefaultValue = "";
        },
        {   Name = JAVA_USE_DEPENDENCIES;
            Type = Boolean;
            DefaultValue = YES;
        },
        {   Name = JAVA_ZIP_FLAGS;
            Type = StringList;
            DefaultValue = "-urg";
        },

        {   Name = CLONE_HEADERS;
            Type = Boolean;
            DefaultValue = NO;
        },
        {   Name = GCC_VERSION;
            Type = CompilerVersion;
            DefaultValue = "";
            ConditionFlavors = ( "arch", "sdk" );
        },
        {   Name = GCC3_VERSION;
            Type = String;
            DefaultValue = "3.3";
        },
        {   Name = MAC_OS_X_VERSION_MAX_ALLOWED;
            Type = String;
            ConditionFlavors = ( "arch" );
            // Default value is set dynamically
        },
        {   Name = MAC_OS_X_VERSION_MIN_REQUIRED;
            Type = String;
            ConditionFlavors = ( "arch" );
            // Default value is set dynamically
        },

        {   Name = USE_HEADERMAP;           // blank value means "check whether the compiler spec supports it"
            Type = Boolean;
            DefaultValue = "";
        },
        {   Name = USE_HEADER_SYMLINKS;     // blank value means "check whether the compiler spec supports it"
            Type = Boolean;
            DefaultValue = "";
        },
        {   Name = HEADERMAP_INCLUDES_NONPUBLIC_NONPRIVATE_HEADERS;
            Type = Boolean;
            DefaultValue = "$(HEADERMAP_INCLUDES_PROJECT_HEADERS)";
        },
        {   Name = HEADERMAP_INCLUDES_FRAMEWORK_ENTRIES_FOR_ALL_PRODUCT_TYPES;
            Type = Boolean;
            DefaultValue = YES;
        },
        {   Name = HEADERMAP_INCLUDES_FLAT_ENTRIES_FOR_TARGET_BEING_BUILT;
            Type = Boolean;
            DefaultValue = YES;
        },
        {   Name = HEADERMAP_INCLUDES_PROJECT_HEADERS;
            Type = Boolean;
            DefaultValue = YES;
        },



        {   Name = EXCLUDED_SOURCE_FILE_NAMES;
            Type = StringList;
            ConditionFlavors = ( "arch", "sdk" );
            DefaultValue = "";
        },
        {   Name = DWARF_DSYM_FOLDER_PATH;
            Type = String;
            DefaultValue = "$(CONFIGURATION_BUILD_DIR)";
        },
        {   Name = PRECOMP_DESTINATION_DIR;
            Type = String;
            DefaultValue = "$(TEMP_DIR)/PrefixHeaders";
        },
        {   Name = INCLUDED_SOURCE_FILE_NAMES;
            Type = StringList;
            ConditionFlavors = ( "arch", "sdk" );
            DefaultValue = "";
        },
        {   Name = DWARF_DSYM_FILE_NAME;
            Type = String;
            DefaultValue = "$(FULL_PRODUCT_NAME).dSYM";
        },
    );
}
)
